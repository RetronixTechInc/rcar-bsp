From a58c6424f8c2a5dbff87028f87bf265c18605f19 Mon Sep 17 00:00:00 2001
From: Oleh Cherpak <oleh.cherpak@globallogic.com>
Date: Thu, 1 Aug 2019 18:11:01 +0300
Subject: [PATCH] KitchenSink: Add multiple call support

In case of multiple clicks on START CALL
It is needed to have posibility to end all started calls.

Test:   - Pair with mobile phone via Bluetooth
        - Open Kitchen Sink app - Bluetooth Test
        - Press the following buttons:
          1. Pick device.
          2. Start call (it'll call the last called number - you need it
             to be answered)
          3. Hold call
          4. Start call (you'll call same number again, so now you have
             two parallel calls)
          5. End call (finish second call)
          6. End call (finish first call)

Jira-Id: ADM-3562
Signed-off-by: Oleh Cherpak <oleh.cherpak@globallogic.com>
Change-Id: I2637b754f071573d9481e203742cad53710dde13
---
 .../bluetooth/BluetoothHeadsetFragment.java   | 25 +++++++++----------
 1 file changed, 12 insertions(+), 13 deletions(-)

diff --git a/tests/EmbeddedKitchenSinkApp/src/com/google/android/car/kitchensink/bluetooth/BluetoothHeadsetFragment.java b/tests/EmbeddedKitchenSinkApp/src/com/google/android/car/kitchensink/bluetooth/BluetoothHeadsetFragment.java
index 619a2b332..1e3085024 100644
--- a/tests/EmbeddedKitchenSinkApp/src/com/google/android/car/kitchensink/bluetooth/BluetoothHeadsetFragment.java
+++ b/tests/EmbeddedKitchenSinkApp/src/com/google/android/car/kitchensink/bluetooth/BluetoothHeadsetFragment.java
@@ -36,6 +36,8 @@ import android.widget.EditText;
 import android.widget.TextView;
 import android.widget.Toast;
 
+import java.util.Stack;
+
 import androidx.annotation.Nullable;
 import androidx.fragment.app.Fragment;
 
@@ -61,7 +63,7 @@ public class BluetoothHeadsetFragment extends Fragment {
     EditText mOutgoingPhoneNumber;
 
     BluetoothHeadsetClient mHfpClientProfile;
-    BluetoothHeadsetClientCall mOutgoingCall;
+    Stack<BluetoothHeadsetClientCall> mOutgoingCalls = new Stack<>();
 
     // Intent for picking a Bluetooth device
     public static final String DEVICE_PICKER_ACTION =
@@ -300,17 +302,14 @@ public class BluetoothHeadsetFragment extends Fragment {
             return;
         }
 
-        if (mOutgoingCall != null) {
-            Log.w(TAG, "Potential on-going call or a stale call " + mOutgoingCall);
-        }
-
         String number = mOutgoingPhoneNumber.getText().toString();
-        mOutgoingCall = mHfpClientProfile.dial(mPickedDevice, number);
-        if (mOutgoingCall == null) {
+        BluetoothHeadsetClientCall outgoingCall = mHfpClientProfile.dial(mPickedDevice, number);
+        if (outgoingCall == null) {
             Log.w(TAG, "Fail to dial number " + number + ". Make sure profile connect first.");
         } else {
-            Log.d(TAG, "Succeed in creating outgoing call " + mOutgoingCall + " for number "
+            Log.d(TAG, "Succeed in creating outgoing call " + outgoingCall + " for number "
                     + number);
+            mOutgoingCalls.push(outgoingCall);
         }
     }
 
@@ -327,12 +326,12 @@ public class BluetoothHeadsetFragment extends Fragment {
             return;
         }
 
-        if (mOutgoingCall != null) {
-            if (mHfpClientProfile.terminateCall(mPickedDevice, mOutgoingCall)) {
-                Log.d(TAG, "Succeed in terminating outgoing call " + mOutgoingCall);
-                mOutgoingCall = null;
+        if (!mOutgoingCalls.empty()) {
+            BluetoothHeadsetClientCall lastOutgoingCall = mOutgoingCalls.pop();
+            if (mHfpClientProfile.terminateCall(mPickedDevice, lastOutgoingCall)) {
+                Log.d(TAG, "Succeed in terminating outgoing call " + lastOutgoingCall);
             } else {
-                Log.d(TAG, "Fail to terminate outgoing call " + mOutgoingCall);
+                Log.d(TAG, "Fail to terminate outgoing call " + lastOutgoingCall);
             }
         } else {
             Log.w(TAG, "No outgoing call to terminate");
-- 
2.28.0

